<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from urdf/quadrotor_sensors1.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="quadrotor_hokuyo_utm30lx1" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Included URDF Files -->
  <!-- Instantiate quadrotor_base_macro once (has no parameters atm) -->
  <link name="base_link1">
    <inertial>
      <mass value="1.477"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.01152" ixy="0.0" ixz="0.0" iyy="0.01152" iyz="0.0" izz="0.0218"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://thinc_sim_gazebo/meshes/quadrotor/quadrotor_4.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://thinc_sim_gazebo/meshes/quadrotor/quadrotor_4.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="base_link1">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <canonicalBody>base_link1</canonicalBody>
  <gazebo>
    <controller:hector_gazebo_ros_imu name="quadrotor_imu_sim" plugin="libhector_gazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>base_link1</bodyName>
      <frameId>ardrone_base_link1</frameId>
      <topicName>ardrone/imu</topicName>
      <rpyOffsets>0 0 0</rpyOffsets>
      <!-- deprecated -->
      <gaussianNoise>0</gaussianNoise>
      <!-- deprecated -->
      <accelDrift>0.5 0.5 0.5</accelDrift>
      <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateGaussianNoise>0.00 0.00 0.00</rateGaussianNoise>
      <headingDrift>0.0</headingDrift>
      <headingGaussianNoise>0.00</headingGaussianNoise>
    </controller:hector_gazebo_ros_imu>
    <controller:hector_gazebo_ros_baro name="quadrotor_baro_sim" plugin="libhector_gazebo_ros_baro.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>10.0</updateRate>
      <bodyName>base_link1</bodyName>
      <topicName>pressure_height</topicName>
      <altimeterTopicName>altimeter</altimeterTopicName>
      <offset>0</offset>
      <drift>0.1</drift>
      <gaussianNoise>0.5</gaussianNoise>
    </controller:hector_gazebo_ros_baro>
    <controller:hector_gazebo_ros_magnetic name="quadrotor_magnetic_sim" plugin="libhector_gazebo_ros_magnetic.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>10.0</updateRate>
      <bodyName>base_link1</bodyName>
      <topicName>magnetic</topicName>
      <offset>0 0 0</offset>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>1.3e-2 1.3e-2 1.3e-2</gaussianNoise>
    </controller:hector_gazebo_ros_magnetic>
    <controller:hector_gazebo_ros_gps name="quadrotor_gps_sim" plugin="libhector_gazebo_ros_gps.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>4.0</updateRate>
      <bodyName>base_link1</bodyName>
      <topicName>fix</topicName>
      <velocityTopicName>fix_velocity</velocityTopicName>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
    </controller:hector_gazebo_ros_gps>
    <controller:gazebo_ros_p3d name="quadrotor_groundtruth_sim" plugin="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>base_link1</bodyName>
      <topicName>ground_truth/state</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>map</frameName>
    </controller:gazebo_ros_p3d>
  </gazebo>
  <gazebo>
    <controller:hector_gazebo_quadrotor_simple_controller name="quadrotor_simple_controller" plugin="libhector_gazebo_quadrotor_simple_controller.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <bodyName>base_link1</bodyName>
      <stateTopic>ground_truth/state</stateTopic>
      <imuTopic>ardrone/imu</imuTopic>
      <topicName>cmd_vel</topicName>
      <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
      <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
      <rollpitchLimit>0.5</rollpitchLimit>
      <yawProportionalGain>2.0</yawProportionalGain>
      <yawDifferentialGain>1.0</yawDifferentialGain>
      <yawLimit>1.5</yawLimit>
      <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
      <velocityXYDifferentialGain>1.0</velocityXYDifferentialGain>
      <velocityXYLimit>2</velocityXYLimit>
      <velocityZProportionalGain>5.0</velocityZProportionalGain>
      <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
      <velocityZLimit>0.5</velocityZLimit>
      <maxForce>30</maxForce>
      <motionSmallNoise>0.05</motionSmallNoise>
      <motionDriftNoise>0.03</motionDriftNoise>
      <motionDriftNoiseTime>5.0</motionDriftNoiseTime>
    </controller:hector_gazebo_quadrotor_simple_controller>
    <controller:hector_gazebo_quadrotor_state_controller name="quadrotor_state_controller" plugin="libhector_gazebo_quadrotor_state_controller.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <bodyName>base_link1</bodyName>
      <stateTopic>ground_truth/state</stateTopic>
      <imuTopic>ardrone/imu</imuTopic>
      <sonarTopic>sonar_height</sonarTopic>
      <topicName>cmd_vel</topicName>
    </controller:hector_gazebo_quadrotor_state_controller>
  </gazebo>
  <!-- Sonar height sensor -->
  <joint name="sonar_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="-0.15 0.0 0.0"/>
    <parent link="base_link1"/>
    <child link="sonar_link"/>
  </joint>
  <link name="sonar_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="0.01 0.01 0.01" /> -->
        <mesh filename="package://thinc_sim_gazebo/meshes/sonar_sensor/max_sonar_ez4.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="sonar_link">
    <sensor:ray name="sonar">
      <rayCount>3</rayCount>
      <rangeCount>3</rangeCount>
      <verticalRayCount>3</verticalRayCount>
      <verticalRangeCount>3</verticalRangeCount>
      <minAngle>-20.0</minAngle>
      <verticalMinAngle>-20.0</verticalMinAngle>
      <maxAngle>20.0</maxAngle>
      <verticalMaxAngle>20.0</verticalMaxAngle>
      <minRange>0.01</minRange>
      <maxRange>3.0</maxRange>
      <resRange>0.01</resRange>
      <updateRate>10</updateRate>
      <controller:hector_gazebo_ros_sonar name="gazebo_ros_sonar_controller" plugin="libhector_gazebo_ros_sonar.so">
        <gaussianNoise>0.000</gaussianNoise>
        <topicName>sonar_height</topicName>
        <frameId>sonar_link</frameId>
      </controller:hector_gazebo_ros_sonar>
    </sensor:ray>
  </gazebo>
  <!-- Hokuyo UTM-30LX mounted upside down below the quadrotor body 
    <include filename="$(find thinc_sim_gazebo)/urdf/sensors/hokuyo_utm30lx.urdf.xacro" />
    <xacro:hokuyo_utm30lx name="laser0" parent="base_link1" ros_topic="scan" update_rate="40" ray_count="1081" min_angle="135" max_angle="-135">
      <origin xyz="0.0 0.0 0.08" rpy="${M_PI} 0 0"/>
    </xacro:hokuyo_utm30lx>-->
  <!-- The following two cameras should be united to one! -->
  <!-- Forward facing camera -->
  <joint name="front_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.21 0.0 0.01"/>
    <parent link="base_link1"/>
    <child link="front_link"/>
  </joint>
  <link name="front_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="front_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="front_link"/>
    <child link="ardrone_base_frontcam"/>
  </joint>
  <link name="ardrone_base_frontcam">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_link">
    <sensor:camera name="front_camera_sensor">
      <imageSize>640 360</imageSize>
      <imageFormat>R8G8B8</imageFormat>
      <hfov>81</hfov>
      <nearClip>0.01</nearClip>
      <farClip>100</farClip>
      <updateRate>60</updateRate>
      <controller:gazebo_ros_depth_camera name="front_camera_controller" plugin="libgazebo_ros_depth_camera.so">
        <cameraName>ardrone/front</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>60</updateRate>
        <imageTopicName>ardrone/front/image_raw</imageTopicName>
        <cameraInfoTopicName>ardrone/front/camera_info</cameraInfoTopicName>
        <frameName>ardrone_base_frontcam</frameName>
        <interface:camera name="front_camera_iface"/>
      </controller:gazebo_ros_depth_camera>
    </sensor:camera>
    <turnGravityOff>true</turnGravityOff>
    <material>PR2/Blue</material>
  </gazebo>
  <!-- Downward facing camera -->
  <joint name="bottom_joint" type="fixed">
    <origin rpy="0 -1.57079632679 0" xyz="0.15 0.0 0.0"/>
    <parent link="base_link1"/>
    <child link="bottom_link"/>
  </joint>
  <link name="bottom_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="bottom_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="bottom_link"/>
    <child link="ardrone_base_bottomcam"/>
  </joint>
  <link name="ardrone_base_bottomcam">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="bottom_link">
    <sensor:camera name="bottom_camera_sensor">
      <imageSize>640 360</imageSize>
      <imageFormat>R8G8B8</imageFormat>
      <hfov>81</hfov>
      <nearClip>0.01</nearClip>
      <farClip>100</farClip>
      <updateRate>60</updateRate>
      <controller:gazebo_ros_depth_camera name="bottom_camera_controller" plugin="libgazebo_ros_depth_camera.so">
        <cameraName>ardrone/bottom</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>60</updateRate>
        <imageTopicName>ardrone/bottom/image_raw</imageTopicName>
        <cameraInfoTopicName>ardrone/bottom/camera_info</cameraInfoTopicName>
        <frameName>ardrone_base_bottomcam</frameName>
        <interface:camera name="bottom_camera_iface"/>
      </controller:gazebo_ros_depth_camera>
    </sensor:camera>
    <turnGravityOff>true</turnGravityOff>
    <material>PR2/Blue</material>
  </gazebo>
</robot>

